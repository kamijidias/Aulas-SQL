/* FUNCOES DE AGREGAÇÃO NUMERICAS */

CREATE TABLE VENDEDORES(
    IDVENDEDOR INT PRIMARY KEY AUTO_INCREMENT,
    NOME VARCHAR(30),
    SEXO CHAR(1),
    JANEIRO FLOAT(10,2),
    FEVEREIRO FLOAT(10,2),
    MARCO FLOAT(10,2)
);

INSERT INTO VENDEDORES VALUES(NULL, 'CARLOS', 'M', 6547.45, 68798.55, 564.78);
INSERT INTO VENDEDORES VALUES(NULL, 'MARIA', 'F', 456.45, 65433.55, 456456.78);
INSERT INTO VENDEDORES VALUES(NULL, 'ANTONIO', 'M', 32123.45, 214564.55, 23234.78);
INSERT INTO VENDEDORES VALUES(NULL, 'CLARA', 'F', 4589.45, 3213415.55, 23558.78);
INSERT INTO VENDEDORES VALUES(NULL, 'ANDERSON', 'M', 6577.45, 13213.55, 2548.78);
INSERT INTO VENDEDORES VALUES(NULL, 'IVONE', 'MF', 5656.45, 45687.55, 5264.78);
INSERT INTO VENDEDORES VALUES(NULL, 'JOAO', 'M', 2121.45, 564.55, 5648.78);
INSERT INTO VENDEDORES VALUES(NULL, 'CELIA', 'F', 223.45, 1231.55, 4567.78);

/* MAX - TRAZ O VALOR MAXIMO DE UMA COLUNA */

SELECT MAX(FEVEREIRO) AS MAIOR_FEV
FROM VENDEDORES;

/* MIN - TRAZ O VALOR MINIMO DE UMA COLUNA */

SELECT MIN(FEVEREIRO) AS MENOR_FEV
FROM VENDEDORES;

/* AVG - TRAZ O VALOR MEDIO DE UMA COLUNA */

SELECT AVG(FEVEREIRO) AS MEDIO_FEV
FROM VENDEDORES;

/* VARIAS FUNÇÕES */

SELECT MAX(JANEIRO) AS MAX_JAN,
       MIN(JANEIRO) AS MIN_JAN,
       AVG(JANEIRO) AS MEDIA_JAN
FROM VENDEDORES;

/* TRUNCATE */

SELECT MAX(JANEIRO) AS MAX_JAN,
       MIN(JANEIRO) AS MIN_JAN,
       TRUNCATE (AVG(JANEIRO), 2) AS MEDIA_JAN
FROM VENDEDORES;

/* AGREGANDO COM SUM */

SELECT SUM(JANEIRO) AS TOTAL_JAN
FROM VENDEDORES;

SELECT SUM(JANEIRO) AS TOTAL_JAN,
       SUM(FEVEREIRO) AS TOTAL_FEV,
       SUM(MARCO) AS TOTAL_MARCO
FROM VENDEDORES;

/* VENDAS POR SEXO */

SELECT SEXO, SUM(MARCO) AS TOTAL_MARCO
FROM VENDEDORES
GROUP BY SEXO;

/* SUBQUERYS */

/* A 31 - VENDEDOR QUE VENDEU MENOS EM MARCO E O SEU NOME */

SELECT NOME, MIN(MARCO) AS MIN_MARCO
FROM VENDEDORES;

SELECT * FROM VENDEDORES;

SELECT MIN(MARCO) FROM VENDEDORES;

SELECT NOME, MARCO FROM VENDEDORES
WHERE MARCO = (SELECT MIN(MARCO) FROM VENDEDORES);

SELECT NOME, MARCO FROM VENDEDORES
WHERE MARCO = (SELECT MAX(MARCO) FROM VENDEDORES);

SELECT NOME, FEVEREIRO FROM VENDEDORES
WHERE FEVEREIRO > (SELECT AVG(FEVEREIRO) FROM VENDEDORES);

SELECT NOME, FEVEREIRO FROM VENDEDORES
WHERE FEVEREIRO < (SELECT AVG(FEVEREIRO) FROM VENDEDORES);

/* OPERAÇÕES EM LINHA */

SELECT * FROM VENDEDORES;

SELECT NOME, 
       JANEIRO, 
       FEVEREIRO,
       MARCO,
       (JANEIRO+FEVEREIRO+MARCO) AS 'TOTAL',
       TRUNCATE((JANEIRO+FEVEREIRO+MARCO+3)/3,2) AS 'MEDIA'
FROM VENDEDORES;

/* APLICANDO UMA % */

SELECT NOME, 
       JANEIRO, 
       FEVEREIRO,
       MARCO,
       (JANEIRO+FEVEREIRO+MARCO) AS 'TOTAL',
       (JANEIRO+FEVEREIRO+MARCO) * .25 AS 'DESCONTO',
       TRUNCATE((JANEIRO+FEVEREIRO+MARCO+3)/3,2) AS 'MEDIA'
FROM VENDEDORES;

/* ALTERANDO TABELAS */

CREATE TABLE TABELA(
    COLUNA1 VARCHAR(30),
    COLUNA2 VARCHAR(30),
    COLUNA3 VARCHAR(30)
);

--ADICIONANDO UM PK
ALTER TABLE TABELA
ADD PRIMARY KEY(COLUNA1);

--ADICIONANDO COLUNA SEM POSIÇÃO, ULTIMA POSIÇÃO
ALTER TABLE TABELA
ADD COLUNA VARCHAR(30);

--ADICIONANDO UMA COLUNA COM POSICAO
ALTER TABLE TABELA
ADD COLUMN COLUNA4 VARCHAR(30) NOT NULL UNIQUE
AFTER COLUNA3;

-- MODIFICANDO O TIPO DE UM CAMPO
ALTER TABLE TABELA MODIFY COLUNA2 DATE NOT NULL;

--RENOMEANDO O NOME DA TABELA
ALTER TABLE TABELA
RENAME PESSOA;

CREATE TABLE TIME(
    IDTIME INT PRIMARY KEY AUTO_INCREMENT,
    TIME VARCHAR(30),
    ID_PESSOA VARCHAR(30)
);

ALTER TABLE TIME
ADD FOREIGN KEY (ID_PESSOA)
REFERENCES PESSOA(COLUNA1);

/* VERIFICAR AS CHAVES */
SHOW CREATE TABLE TIME;

/* ORGANIZACAO DE CHAVES - CONSTRAINT = REGRA */

CREATE TABLE JOGADOR(
    IDJOGADOR INT PRIMARY KEY AUTO_INCREMENT,
    NOME VARCHAR(30)
);

CREATE TABLE TIMES(
    IDTIME INT PRIMARY KEY AUTO_INCREMENT,
    NOMETIME VARCHAR(30),
    ID_JOGADOR INT,
    FOREIGN KEY(ID_JOGADOR)
    REFERENCES JOGADOR(IDJOGADOR)
);

INSERT INTO JOGADOR VALUES(NULL, 'GUERRERO');
INSERT INTO TIMES VALUES(NULL, 'FLAMENGO', 1);

SHOW CREATE TABLE JOGADOR;
SHOW CREATE TABLE TIMES;

-- ORGANIZANDO CHAVES E ACOES DE CONSTRAINTS

SHOW TABLES;

DROP TABLE ENDERECO;
DROP TABLE TELEFONE;
DROP TABLE CLIENTE;

CREATE TABLE CLIENTE(
    IDCLIENTE INT,
    NOME VARCHAR(30) NOT NULL
);

CREATE TABLE TELEFONE(
    IDTELEFONE INT,
    TIPO CHAR(3) NOT NULL,
    NUMERO VARCHAR(10) NOT NULL,
    ID_CLIENTE INT 
);

ALTER TABLE CLIENTE ADD CONSTRAINT PK_CLIENTE
PRIMARY KEY(IDCLIENTE);

ALTER TABLE TELEFONE ADD CONSTRAINT FK_CLIENTE_TELEFONE
FOREIGN KEY(ID_CLIENTE) REFERENCES CLIENTE(IDCLIENTE);

SHOW CREATE TABLE TELEFONE;

/* DICIONARIO DE DADOS */

SHOW DATABASES;

USE INFORMATION_SCHEMA;

STATUS

SHOW TABLES;

DESC TABLE_CONSTRAINTS;

SELECT CONSTRAINT_SCHEMA AS 'BANCO',
       TABLE_NAME AS 'TABELA',
       CONSTRAINT_NAME AS 'NOME DA REGRA',
       CONSTRAINT_TYPE AS 'TIPO'
FROM TABLE_CONSTRAINTS
WHERE CONSTRAINT_SCHEMA = 'COMERCIO';

/* APAGANDO CONSTRAINTS */

ALTER TABLE TELEFONE 
DROP FOREIGN KEY FK_CLIENTE_TELEFONE;
